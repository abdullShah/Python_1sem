"""
Суровцев Денис ИУ7-14Б
Даны массивы D и F. Сформировать матрицу A по формуле ajk = sin(dj+fk).
Определить среднее арифметическое положительных чисел каждой строки
матрицы и количество элементов, меньших среднего арифметического.
Результаты записать соответственно в массивы AV и L. Напечатать матрицу A в
виде матрицы и рядом столбцы AV и L.
В AV записывать особое значение при отсутствии положительных элементов!
"""
from math import sin

D = list(map(int, input("Введите элементы списка D через пробел: ").split()))
F = list(map(int, input("Введите элементы списка F через пробел: ").split()))

while len(D) == 0 or len(F) == 0:
    while len(D) == 0:
        print('Длина списка D равна нулю! Повторите попытку!')
        D = list(map(int, input("Введите элементы списка D через пробел: ").split()))

    while len(F) == 0:
        print('Длина списка F равна нулю! Повторите попытку!')
        F = list(map(int, input("Введите элементы списка F через пробел: ").split()))


A = []  # Переменная для матрицы
AV = []  # Список для среднего арифметического положительных чисел каждой строки матрицы
L = []  # Список для количества элементов, меньших среднего арифметического
for j in range(len(D)):
    row = []  # Создаем строку
    for k in range(len(F)):
        el = round(sin(D[j] + F[k]), 3)  # Считаем элемент матрицы A
        row.append(el)  # Добавляем элемент в строку
    A.append(row)  # Добавляем строку в матрицу
    sum_positive = 0  # Переменная для суммы положительных элементов строки
    len_positive = 0  # Переменная для количества положительных элементов строки
    for item in row:
        if item > 0:
            sum_positive += item
            len_positive += 1
    if len_positive != 0:  # Обрабатываем случай, когда не существует среднего арифметического
        sr_row = sum_positive / len_positive  # Вычитываем среднее арифметическое положительных элементов
        AV.append(round(sr_row, 3))  # Добавляем в массив AV среднее арифметическое
    else:
        # Добавление особого значения при отсутствии положительных элементов
        AV.append("—")

    sr_row_n = round(sum(row) / len(row), 3)  # Вычитываем среднее арифметическое строки
    cnt_sr = 0  # Переменная для количества элементов, меньших среднего арифметического
    for item in row:
        if item < sr_row_n:
            cnt_sr += 1
    L.append(cnt_sr)  # Добавляем в список L количества элементов, меньших среднего арифметического



print(f'{"A":^{9*len(F)}}{" " * 7}{"AV":^5}{" " * 7}{"L"}')
i_sup = 0  # Вспомогательный счетчик
for i in range(len(D)):
    for j in range(len(F)):
        print(f'{A[i][j]:^9}', end="")
    print(f'{" " * 7}{AV[i_sup]:^5}{" " * 7}{L[i_sup]}')
    i_sup += 1
