"""
Абдуллаев Шахмар ИУ7-14Б
Найти максимальное значение в квадратной матрице над главной диагональю и минимальное - под побочной диагональю.
"""

n = int(input("Введите положительный размер квадратной матрицы: "))

while n <= 0:
    print('Введено неположительное число! Повторите попытку')
    n = int(input("Введите положительный размер квадратной матрицы: "))

matrix = []  # Переменная для матрицы
print("Введите целочисленные элементы строки матрицы через пробел: ")
for _ in range(n):
    matrix.append(
        list(map(int, input().split()))
    )


max_value = 0  # Начальное значение для максимального значения над главной диагональю
min_value = 0  # Начальное значение для минимального значения под побочной диагональю

# Решение первого подпункта: нахождение максимального значения над главной диагональю
for i in range(n):
    for j in range(i + 1, n):  # Обходим только элементы над главной диагональю
        if i == 0:  # Условие для заполнения начальными данными переменные
            max_value = matrix[i][j]
            continue
        if matrix[i][j] > max_value:  # Проверка на максимальность
            max_value = matrix[i][j]

# Решение второго подпункта: нахождение минимального значения под побочной диагональю
for i in range(n):
    for j in range(n - i, n):  # Обходим только элементы под побочной диагональю
        # Условие для заполнения начальными данными переменные
        # Начинаем с 1 индекса, потому что при i = 0 мы обращаемся к последнему элементу побочной диагонали,
        # который нам не подходит по условию (строго под диагональю нужны элементы)
        if i == 1:
            min_value = matrix[i][j]
            continue
        if matrix[i][j] < min_value:  # Проверка на минимальность
            min_value = matrix[i][j]


if n == 1:
    print('Отсутстуют элементы над главной диагональю и под побочной диагональю')
else:
    print(f"Максимальное значение над главной диагональю: {max_value}")
    print(f"Минимальное значение под побочной диагональю: {min_value}")
